# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2019, Armin Ronacher
# This file is distributed under the same license as the Flask-SQLAlchemy
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask-SQLAlchemy 2.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-09 11:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../config.rst:2
msgid "Configuration"
msgstr ""

#: ../../config.rst:4
msgid ""
"The following configuration values exist for Flask-SQLAlchemy. Flask-"
"SQLAlchemy loads these values from your main Flask config which can be "
"populated in various ways.  Note that some of those cannot be modified "
"after the engine was created so make sure to configure as early as "
"possible and to not modify them at runtime."
msgstr ""

#: ../../config.rst:11
msgid "Configuration Keys"
msgstr ""

#: ../../config.rst:13
msgid "A list of configuration keys currently understood by the extension:"
msgstr ""

#: ../../config.rst:18
msgid "``SQLALCHEMY_DATABASE_URI``"
msgstr ""

#: ../../config.rst:18
msgid "The database URI that should be used for the connection.  Examples:"
msgstr ""

#: ../../config.rst:21
msgid "``sqlite:////tmp/test.db``"
msgstr ""

#: ../../config.rst:22
msgid "``mysql://username:password@server/db``"
msgstr ""

#: ../../config.rst:23
msgid "``SQLALCHEMY_BINDS``"
msgstr ""

#: ../../config.rst:23
msgid ""
"A dictionary that maps bind keys to SQLAlchemy connection URIs.  For more"
" information about binds see :ref:`binds`."
msgstr ""

#: ../../config.rst:26
msgid "``SQLALCHEMY_ECHO``"
msgstr ""

#: ../../config.rst:26
msgid ""
"If set to `True` SQLAlchemy will log all the statements issued to stderr "
"which can be useful for debugging."
msgstr ""

#: ../../config.rst:29
msgid "``SQLALCHEMY_RECORD_QUERIES``"
msgstr ""

#: ../../config.rst:29
msgid ""
"Can be used to explicitly disable or enable query recording.  Query "
"recording automatically happens in debug or testing mode.  See "
":func:`get_debug_queries` for more information."
msgstr ""

#: ../../config.rst:34
msgid "``SQLALCHEMY_NATIVE_UNICODE``"
msgstr ""

#: ../../config.rst:34
msgid ""
"Can be used to explicitly disable native unicode support.  This is "
"required for some database adapters (like PostgreSQL on some Ubuntu "
"versions) when used with improper database defaults that specify "
"encoding-less databases."
msgstr ""

#: ../../config.rst:40
msgid "``SQLALCHEMY_POOL_SIZE``"
msgstr ""

#: ../../config.rst:40
msgid ""
"The size of the database pool.  Defaults to the engine's default (usually"
" 5)"
msgstr ""

#: ../../config.rst:42
msgid "``SQLALCHEMY_POOL_TIMEOUT``"
msgstr ""

#: ../../config.rst:42
msgid "Specifies the connection timeout in seconds for the pool."
msgstr ""

#: ../../config.rst:44
msgid "``SQLALCHEMY_POOL_RECYCLE``"
msgstr ""

#: ../../config.rst:44
msgid ""
"Number of seconds after which a connection is automatically recycled. "
"This is required for MySQL, which removes connections after 8 hours idle "
"by default.  Note that Flask-SQLAlchemy automatically sets this to 2 "
"hours if MySQL is used. Some backends may use a different default timeout"
" value. For more information about timeouts see :ref:`timeouts`."
msgstr ""

#: ../../config.rst:54
msgid "``SQLALCHEMY_MAX_OVERFLOW``"
msgstr ""

#: ../../config.rst:54
msgid ""
"Controls the number of connections that can be created after the pool "
"reached its maximum size.  When those additional connections are returned"
" to the pool, they are disconnected and discarded."
msgstr ""

#: ../../config.rst:59
msgid "``SQLALCHEMY_TRACK_MODIFICATIONS``"
msgstr ""

#: ../../config.rst:59
msgid ""
"If set to ``True``, Flask-SQLAlchemy will track modifications of objects "
"and emit signals.  The default is ``None``, which enables tracking but "
"issues a warning that it will be disabled by default in the future.  This"
" requires extra memory and should be disabled if not needed."
msgstr ""

#: ../../config.rst:68
msgid ""
"The ``SQLALCHEMY_NATIVE_UNICODE``, ``SQLALCHEMY_POOL_SIZE``, "
"``SQLALCHEMY_POOL_TIMEOUT`` and ``SQLALCHEMY_POOL_RECYCLE`` configuration"
" keys were added."
msgstr ""

#: ../../config.rst:73
msgid "The ``SQLALCHEMY_BINDS`` configuration key was added."
msgstr ""

#: ../../config.rst:76
msgid "The ``SQLALCHEMY_MAX_OVERFLOW`` configuration key was added."
msgstr ""

#: ../../config.rst:79
msgid "The ``SQLALCHEMY_TRACK_MODIFICATIONS`` configuration key was added."
msgstr ""

#: ../../config.rst:81
msgid "``SQLALCHEMY_TRACK_MODIFICATIONS`` will warn if unset."
msgstr ""

#: ../../config.rst:85
msgid "Connection URI Format"
msgstr ""

#: ../../config.rst:87
msgid ""
"For a complete list of connection URIs head over to the SQLAlchemy "
"documentation under (`Supported Databases "
"<http://www.sqlalchemy.org/docs/core/engines.html>`_).  This here shows "
"some common connection strings."
msgstr ""

#: ../../config.rst:92
msgid ""
"SQLAlchemy indicates the source of an Engine as a URI combined with "
"optional keyword arguments to specify options for the Engine. The form of"
" the URI is::"
msgstr ""

#: ../../config.rst:98
msgid ""
"Many of the parts in the string are optional.  If no driver is specified "
"the default one is selected (make sure to *not* include the ``+`` in that"
" case)."
msgstr ""

#: ../../config.rst:102
msgid "Postgres::"
msgstr ""

#: ../../config.rst:106
msgid "MySQL::"
msgstr ""

#: ../../config.rst:110
msgid "Oracle::"
msgstr ""

#: ../../config.rst:114
msgid "SQLite (note that platform path conventions apply)::"
msgstr ""

#: ../../config.rst:124
msgid "Using custom MetaData and naming conventions"
msgstr ""

#: ../../config.rst:126
msgid ""
"You can optionally construct the :class:`SQLAlchemy` object with a custom"
" :class:`~sqlalchemy.schema.MetaData` object. This allows you to, among "
"other things, specify a `custom constraint naming convention "
"<http://docs.sqlalchemy.org/en/latest/core/constraints.html#constraint-"
"naming-conventions>`_ in conjunction with SQLAlchemy 0.9.2 or higher. "
"Doing so is important for dealing with database migrations (for instance "
"using `alembic <http://alembic.zzzcomputing.com>`_ as stated `here "
"<http://alembic.zzzcomputing.com/en/latest/naming.html>`_. Here's an "
"example, as suggested by the SQLAlchemy docs::"
msgstr ""

#: ../../config.rst:152
msgid ""
"For more info about :class:`~sqlalchemy.schema.MetaData`, `check out the "
"official docs on it "
"<http://docs.sqlalchemy.org/en/latest/core/metadata.html>`_."
msgstr ""

#: ../../config.rst:159
msgid "Timeouts"
msgstr ""

#: ../../config.rst:161
msgid ""
"Certain database backends may impose different inactive connection "
"timeouts, which interferes with Flask-SQLAlchemy's connection pooling."
msgstr ""

#: ../../config.rst:164
msgid ""
"By default, MariaDB is configured to have a 600 second timeout. This "
"often surfaces hard to debug, production environment only exceptions like"
" ``2013: Lost connection to MySQL server during query``."
msgstr ""

#: ../../config.rst:167
msgid ""
"If you are using a backend (or a pre-configured database-as-a-service) "
"with a lower connection timeout, it is recommended that you set "
"`SQLALCHEMY_POOL_RECYCLE` to a value less than your backend's timeout."
msgstr ""

